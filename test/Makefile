top="$(CURDIR)"/

# Target name of dependency file generated by GCC, is just xxx.o
# So, we need post processing to handle it properly.
# To avoid this overhead... we don't use output directory.!
OUTDIR:=
DEPDIR:=.deps/
EXTLIB_DIR:=../lib/

EXT_LIBRARY:=ylisp
EXTLIB=$(addprefix $(EXTLIB_DIR),$(addsuffix .a,$(addprefix lib,$(EXT_LIBRARY))))

PUB_HEADER=
SOURCES= main.c
OBJ=$(subst .c,.o, $(addprefix $(OUTDIR),$(SOURCES)))
DEP_FILES=$(subst .c,.P, $(addprefix $(DEPDIR),$(SOURCES)))

TARGET=$(OUTDIR)test

HELPER=__procia_test

CC=gcc
CFLAGS+= -Wall -g
LDFLAGS+= -rdynamic -ldl -lrt -lpthread
INCLUDES=-I../include
C_COMPILE=$(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
C_DEPENDENCIES=-Wp,-MD,$(DEPDIR)$(*F).P
C_LINK=$(CC) $(CFLAGS) $(LDFLAGS) -L.

release: $(TARGET) $(HELPER)

DEPS_MAGIC := $(shell mkdir $(DEPDIR) $(OUTDIR) > /dev/null 2>&1 || :)

# simply ignore file which doesn't exist. (At first these files don't exist..)
-include $(DEP_FILES)

$(OUTDIR)%.o: %.c
	@echo '$(C_COMPILE) -o $@ -c $<'; \
	$(C_COMPILE) $(C_DEPENDENCIES) -o $@ -c $<

$(HELPER): $(OUTDIR)$(HELPER).o
	@echo '$(CC) -L. -o $@ $^'; \
	$(CC) -L. -o $@ $^

$(TARGET): $(OBJ) $(EXTLIB)
	@echo '$(C_LINK) -o $@ $^'; \
	$(C_LINK) -o $@ $^
clean:
	rm -f *.mod *.o *.obj .lo $(TARGET)
	rm -rf $(DEPDIR)
	rm -rf $(OUTDIR)
	rm -rf $(HELPER)

# End of Makefile
