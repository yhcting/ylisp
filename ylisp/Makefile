top="$(CURDIR)"/

VERSION=1.0

# Target name of dependency file generated by GCC, is just xxx.o
# So, we need post processing to handle it properly.
# To avoid this overhead... we don't use output directory.!
OUTDIR:=
DISTDIR:=$(top)$(shell basename $(top))-$(VERSION)
DEPDIR:=.deps/
EXTLIB_DIR:=../lib/
EXTLIB_NAME:=

ifndef SYSLIB_DIR
    SYSLIB_DIR:=/usr/lib/
endif

SYSLIB_NAME:=pthread dl
EXTLIB=$(addprefix $(EXTLIB_DIR),$(addsuffix .a,$(addprefix lib,$(EXTLIB_NAME))))
SYSLIB=$(addprefix $(SYSLIB_DIR),$(addsuffix .a,$(addprefix lib,$(SYSLIB_NAME))))

PUB_HEADER=ylisp.h yldef.h ylut.h yllist.h yltrie.h yldynb.h yldev.h ylsfunc.h
SOURCES= lisp.c sfunc.c mempool.c mthread.c parser.c interpret.c \
	 nfunc.c nfunc_mt.c symlookup.c gsym.c trie.c ut.c testmain.c
OBJ=$(subst .c,.o, $(addprefix $(OUTDIR),$(SOURCES)))
DEP_FILES=$(subst .c,.P, $(addprefix $(DEPDIR),$(SOURCES)))

TARGET=$(OUTDIR)ylisp
LIBA=$(OUTDIR)libylisp.a
LIBSO=$(OUTDIR)libylisp.so

CC=$(SYSBIN)gcc
AR=$(SYSBIN)ar
AR_CMD=$(AR) cr
CFLAGS+= -g -Wall
LDFLAGS+= -rdynamic -ldl -lrt -lpthread
SOFLAGS+=
INCLUDES+= -I../include
C_COMPILE=$(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)
C_DEPENDENCIES=-Wp,-MD,$(DEPDIR)$(*F).P
C_LINK=$(CC) $(CFLAGS) $(LDFLAGS) -L.
SO_LINK=$(CC) $(SOFLAGS)

debug: $(TARGET)

release: $(LIBA) $(LIBSO)
	cp $(PUB_HEADER) ../include

DEPS_MAGIC := $(shell mkdir $(DEPDIR) $(OUTDIR) > /dev/null 2>&1 || :)

# simply ignore file which doesn't exist. (At first these files don't exist..)
-include $(DEP_FILES)

$(OUTDIR)%.o: %.c
	@echo '$(C_COMPILE) -o $@ -c $<'; \
	$(C_COMPILE) $(C_DEPENDENCIES) -o $@ -c $<

$(LIBA): $(OBJ)
	@echo '$(AR_CMD) $@ $^'; \
	$(AR_CMD) $@ $^
	cp $@ ../lib/

# Is 'chmod' really only way to change mode of output so file?? Any elegant way????
$(LIBSO): $(OBJ)
	@echo '$(SO_LINK) $@ $^'; \
	$(SO_LINK) -shared -Wl,-soname,$@ -o $@ $^
	chmod 0644 $@
	cp $@ ../lib/

$(TARGET): $(OBJ) $(EXTLIB)
	@echo '$(C_LINK) -o $@ $^'; \
	$(C_LINK) -o  $@ $^


tags:


clean:
	rm -f *.mod *.o *.obj .lo $(TARGET) $(LIBA) $(LIBSO)
	rm -rf $(DEPDIR)
	rm -rf $(OUTDIR)

.PHONY: dist

dist:
	rm -rf $(DISTDIR)
	mkdir $(DISTDIR)
	cp $(SOURCES) $(DISTDIR)
	tar -cvzf $(DISTDIR).tar.gz $(DISTDIR)
	rm -rf $(DISTDIR)

# End of Makefile
