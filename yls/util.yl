; ==============================
; = Define Utility Functions
; ==============================
(defun ut.bsort (cmp L)
"ut.bsort <cmp func> <list exp>
    -sort by using bubble sort alorithm (descending order)
     NOTE!: Passed list itself is changed! - sorted.
    @cmp func [Symbol]:   function used to compare.
                          function should be like '(<func> e1 e2)'.
                          This should return 'not nil' if 1st parameter is greater than 2nd parameter, otherwise nil.
    @list exp [list]:     list expression.
"
    (let ( (etmp '()) (I L) (J '()) )
        (while (not (null (cdr I)))
            (set 'J L)
            (while (not (null (cdr J)))
                (cond
                    ( (equal '() (cmp (car J) (cadr J)))
                        (progn
                            (set 'etmp (car J))
                            (setcar J (cadr J))
                            (setcar (cdr J) etmp))))
                (set 'J (cdr J)))
            (set 'I (cdr I)))
        L))
