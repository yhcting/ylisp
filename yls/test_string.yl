(print '"====== Start Testing 'string' =======\n")
(assert (eq 5 (string.length 'abcde)))
(set 'x 10.98)
(assert (eq '10 (string.itos x)))
(assert (eq '10.980000 (string.dtos x)))
(assert (eq 'abcdefgh (string.concat 'ab 'cdef 'gh)))
(set 'lns (string.split-to-line '"123\n\n7890\nabcd"))
(assert (eq '123 (car lns)))
(assert (eq 0 (string.length (cadr lns))))
(assert (eq '7890 (caddr lns)))
(assert (eq 'abcd (car (cdddr lns))))

(let ((r '()))
    (set 'r (string.pcre-match '"([0-9]+)([a-z]+)\\s" '"  hahah 12abc123abcd effff" '""))
    (assert (eq '"123abcd " (car r)))
    (assert (eq '123 (cadr r)))
    (assert (eq 'abcd (caddr r))))

(let ((r '()))
    (set 'r (string.pcre-match '"^([0-9]+)([a-z]+)" '"123aBcD fff" '"i"))
    (assert (eq '123aBcD (car r))))

(let ((r '()) (subj '"hahaha my name is cho!"))
    (set 'r (string.pcre-replace '"name" '"full name" subj '""))
    (assert (eq r '"hahaha my full name is cho!")))